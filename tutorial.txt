/********************* Object Destructuring  *****************/

Destructuring - The destructuring syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.

The destructuring assignment uses similar syntax, but on the left-hand side of the assignment to define what values to unpack from the sourced variable

/********************* Template Literals  *****************/

Template Literals - shorter and easier to read than the "old" way of concatenating strings
 
Template literals are string literals allowing embedded expressions. You can use multi-line strings and string interpolation features with them.

Template literals are enclosed by the backtick (` `)  (grave accent) character instead of double or single quotes.

Template literals can contain placeholders

To escape a backtick in a template literal, put a backslash (\) before the backtick


/********************* Global Features vs Core Modules vs Third-Party Modules *****************/

You can basically differentiate between:

Global features: Keywords like const or function but also some global objects like process

Core Node.js Modules: Examples would be the file-system module ("fs"), the path module ("path") or the Http module ("http")

Third-party Modules: Installed via npm install - you can add any kind of feature to your app via this way

Global features are always available, you don't need to import them into the files where you want to use them.

Core Node.js Modules don't need to be installed (NO npm install is required) but you need to import them when you want to use features exposed by them


/******** Type of Errors ********/

Syntax Errors
Run time Errors
Logical Errors

################# How web work #################
Client => Request => Server => Response => Client

### NodeJs Program LifeCycle and Event Loop 

1) NodeJS Run non-blocking JS Code and uses an event-driven code (Event-Loop) for
running your logic.

2) A Node Program exists as soon as there is no more work to do.

3) Note: The createServer() event nevers finishes by default.

Parse Request data is chunks (Stream & Buffer)









